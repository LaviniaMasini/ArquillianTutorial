<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.tutorial</groupId>
	<artifactId>arquillian-tutorial</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>arquillian.tutorial Maven Webapp</name>
	<url>http://maven.apache.org</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<!-- Set this property to JBOSS_HOME environment variable or to wildfly 
			server source folder -->
		<taglibs.version>1.2.5</taglibs.version>
		<jacoco.report.folder>${project.build.directory}/coverage-reports</jacoco.report.folder>
		<!-- Jacoco properties for Unit Tests -->
		<jacoco.report.path>${project.reporting.outputDirectory}/jacoco-ut</jacoco.report.path>
		<jacoco.data.file>${jacoco.report.folder}/jacoco.exec</jacoco.data.file>
		<!-- Jacoco properties for Integration Tests -->
		<jacoco.report.it.path>${project.reporting.outputDirectory}/jacoco-it</jacoco.report.it.path>
		<jacoco.data.it.file>${jacoco.report.folder}/jacoco-it.exec</jacoco.data.it.file>
		<!-- Sonar coverage -->
		<sonar.language>java</sonar.language>
		<sonar.jacoco.reportPaths>${jacoco.data.file}</sonar.jacoco.reportPaths>
		<sonar.issue.ignore.multicriteria>e11</sonar.issue.ignore.multicriteria>
		<sonar.issue.ignore.multicriteria.e11.ruleKey>
			squid:S1989
		</sonar.issue.ignore.multicriteria.e11.ruleKey>
		<sonar.issue.ignore.multicriteria.e11.resourceKey>
			**/*.java
		</sonar.issue.ignore.multicriteria.e11.resourceKey>
		<!-- browser for Functional Tests -->
		<browser.property>chrome</browser.property>
		<!-- Credentials for Wildfly server -->
		<username.property>admin</username.property>
		<password.property>admin</password.property>
	</properties>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>2.23.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>5.1.3.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>5.1.3.RELEASE</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.spec</groupId>
			<artifactId>jboss-javaee-all-8.0</artifactId>
			<version>1.0.2.Final</version>
		</dependency>
		<dependency>
			<groupId>org.apache.taglibs</groupId>
			<artifactId>taglibs-standard-impl</artifactId>
			<version>${taglibs.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.taglibs</groupId>
			<artifactId>taglibs-standard-spec</artifactId>
			<version>${taglibs.version}</version>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.junit</groupId>
			<artifactId>arquillian-junit-container</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>org.jacoco.core</artifactId>
			<version>0.7.8</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.extension</groupId>
			<artifactId>arquillian-jacoco</artifactId>
			<version>1.0.0.Alpha9</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.graphene</groupId>
			<artifactId>graphene-webdriver</artifactId>
			<version>2.3.2</version>
			<type>pom</type>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jboss.arquillian</groupId>
				<artifactId>arquillian-bom</artifactId>
				<version>1.4.1.Final</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.jboss.arquillian.extension</groupId>
				<artifactId>arquillian-drone-bom</artifactId>
				<version>2.5.1</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<finalName>arquillian.tutorial</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M3</version>
				<configuration>
					<argLine>${surefireArgLine}</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>1.1.10</version>
				<configuration>
					<targetClasses>
						<param>arquillian.tutorial.entity*</param>
						<param>arquillian.tutorial.service*</param>
						<param>arquillian.tutorial.database*</param>
						<param>arquillian.tutorial.servlet*</param>
					</targetClasses>
					<targetTests>
						<param>arquillian.tutorial.unit*</param>
						<param>arquillian.tutorial.servlet*</param>
					</targetTests>
					<mutators>
						<mutator>ALL</mutator>
					</mutators>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.eluder.coveralls</groupId>
					<artifactId>coveralls-maven-plugin</artifactId>
					<version>4.3.0</version>
					<configuration>
						<jacocoReports>
							<jacocoReport>${jacoco.report.path}/jacoco.xml</jacocoReport>
						</jacocoReports>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>jacoco</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<version>0.7.8</version>
						<configuration>
						</configuration>
						<executions>
							<!-- Unit tests -->
							<execution>
								<id>jacoco-pre-unit-test</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${jacoco.data.file}</destFile>
									<propertyName>surefireArgLine</propertyName>
								</configuration>
							</execution>
							<execution>
								<id>jacoco-post-unit-test</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<dataFile>${jacoco.data.file}</dataFile>
									<outputDirectory>${jacoco.report.path}</outputDirectory>
								</configuration>
							</execution>
							<!-- Integration Tests -->
							<execution>
								<id>jacoco-pre-integration-test</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>prepare-agent-integration</goal>
								</goals>
								<configuration>
									<destFile>${jacoco.data.it.file}</destFile>
									<propertyName>failsafeArgLine</propertyName>
								</configuration>
							</execution>
							<execution>
								<id>jacoco-post-integration-test</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>report-integration</goal>
								</goals>
								<configuration>
									<dataFile>${jacoco.data.it.file}</dataFile>
									<outputDirectory>${jacoco.report.it.path}</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>arquillian-wildfly-managed</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.jboss.arquillian.protocol</groupId>
					<artifactId>arquillian-protocol-servlet</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.wildfly.arquillian</groupId>
					<artifactId>wildfly-arquillian-container-managed</artifactId>
					<version>2.1.1.Final</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.wildfly.plugins</groupId>
						<artifactId>wildfly-maven-plugin</artifactId>
						<version>2.0.0.Final</version>
						<executions>
							<execution>
								<id>deploy</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
									<goal>deploy</goal>
									<goal>shutdown</goal>
								</goals>
							</execution>
							<execution>
								<id>cleanup</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>start</goal>
									<goal>undeploy</goal>
									<goal>shutdown</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>3.0.0-M3</version>
						<executions>
							<execution>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<argLine>${failsafeArgLine}</argLine>
							<systemPropertyVariables>
								<arquillian.launch>arquillian-wildfly-managed</arquillian.launch>
								<browser>${browser.property}</browser>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>arquillian-wildfly-remote</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.jboss.arquillian.protocol</groupId>
					<artifactId>arquillian-protocol-servlet</artifactId>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.wildfly.arquillian</groupId>
					<artifactId>wildfly-arquillian-container-remote</artifactId>
					<version>2.1.1.Final</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.wildfly.plugins</groupId>
						<artifactId>wildfly-maven-plugin</artifactId>
						<version>2.0.0.Final</version>
						<executions>
							<execution>
								<id>deploy</id>
								<phase>pre-integration-test</phase>
								<configuration>
									<username>${username.property}</username>
									<password>${password.property}</password>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>3.0.0-M3</version>
						<executions>
							<execution>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<argLine>${failsafeArgLine}</argLine>
							<systemPropertyVariables>
								<arquillian.launch>arquillian-wildfly-remote</arquillian.launch>
								<browser>${browser.property}</browser>
							</systemPropertyVariables>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>fabric8</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.28.0</version>
						<configuration>
							<images>
								<image>
									<name>arquillian</name>
									<build>
										<dockerFileDir>${project.basedir}/docker</dockerFileDir>
										<args>
											<warFile>arquillian.tutorial.war</warFile>
										</args>
										<assembly>
											<inline>
												<files>
													<file>
														<source>${project.build.directory}/arquillian.tutorial.war</source>
													</file>
												</files>
											</inline>
										</assembly>
									</build>
									<run>
										<ports>
											<port>9990:9990</port>
											<port>8080:8080</port>
											<port>8787:8787</port>
										</ports>
										<wait>
											<time>50000</time>
										</wait>
									</run>
								</image>
							</images>
							<showLogs>true</showLogs>
						</configuration>
						<executions>
							<execution>
								<id>docker:build</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
							<execution>
								<id>docker:start</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>docker:stop</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>